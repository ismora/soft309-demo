<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="0" tests="7" time="0.602" timestamp="2025-04-24T21:54:56.265418" hostname="VeronicaMora"><testcase classname="tests.test_math_ops.TestMathOperations" name="test_add" time="0.239" /><testcase classname="tests.test_math_ops.TestMathOperations" name="test_subtract" time="0.001" /><testcase classname="tests.test_math_ops.TestMathOperations" name="test_multiply" time="0.001" /><testcase classname="tests.test_math_ops.TestMathOperations" name="test_divide" time="0.001" /><testcase classname="tests.test_math_ops.TestMathOperations" name="test_flaky_example" time="0.001"><failure message="AssertionError: assert False&#10; +  where False = &lt;bound method Random.choice of &lt;random.Random object at 0x000001B15AEEAE20&gt;&gt;([True, False])&#10; +    where &lt;bound method Random.choice of &lt;random.Random object at 0x000001B15AEEAE20&gt;&gt; = &lt;module 'random' from 'C:\\Users\\veron\\AppData\\Local\\Programs\\Python\\Python310\\lib\\random.py'&gt;.choice">self = &lt;test_math_ops.TestMathOperations object at 0x000001B16E99A9B0&gt;

    def test_flaky_example(self):
        # Test deliberadamente inestable para demostraci√≥n
        import random
&gt;       assert random.choice([True, False])
E       AssertionError: assert False
E        +  where False = &lt;bound method Random.choice of &lt;random.Random object at 0x000001B15AEEAE20&gt;&gt;([True, False])
E        +    where &lt;bound method Random.choice of &lt;random.Random object at 0x000001B15AEEAE20&gt;&gt; = &lt;module 'random' from 'C:\\Users\\veron\\AppData\\Local\\Programs\\Python\\Python310\\lib\\random.py'&gt;.choice

tests\test_math_ops.py:26: AssertionError</failure></testcase><testcase classname="tests.test_operations" name="test_suma" time="0.001" /><testcase classname="tests.test_operations" name="test_resta" time="0.001" /></testsuite></testsuites>